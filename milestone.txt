Christopher Herrera and Olivia Yin

Project:
VPython

Plans for our game:
The idea for our game is to have a minecraft-style building game in which the player starts on an island in the sky, collects resources, and traverses an obstacle course to get to a goal on another island. The player is able to break blocks to collect building materials which will make it easier to get to the goal. Alternatively, they could choose to not spend time collecting resources and risk falling and dying by jumping through the obstacle course.

Collisions:
Our game has linear collision detection and resolution between axis aligned bounding boxes. It has point collision detection between rays and axis aligned bounding boxes for the simple ray tracing algorithm used to detect which block the player is looking at.

How to play:
The WASD keys are to move around and the space bar is to jump. The camera is controlled in a couple different ways. The first is by moving the mouse away from the center of the screen towards the edges. This rotates the camera toward the mouse, getting faster as the mouse gets closer to the edge. The second way is by clicking and dragging the mouse, which will rotate the view. The third is with the arrow keys for very slow rotations. Sometimes, the camera can get stuck in an orientation. This can be fixed by clicking near the middle of the screen. Unfortunately, VPython cannot distinguish between right and left clicking, so breaking blocks is bound to the q key. To break a block, rotate the camera so that the small black cursor is over the block and press q. You must be within 3.5 blocks of a block to break it. We haven't yet finished implementing the mechanics necessary to fulfill the objective we had in mind, which was to get off the island you start on and navigate to another one, so right now the objective is don't fall off.

How its evolved:
Its now first person! It used to be third person, but that didn't really work so well with controlling the player. Our goal is mostly still the same, and we think it is still feasible.

Other notes:
Right now the Steve model can but doesn't move with the camera. I intentionally disabled it because right now we don't have a way to rotate the model, so if it were to move with the camera, we would be looking into it and wouldn't be able to see the surroundings. Also, the game can get kind of laggy, at least on my laptop, and we haven't figured out how to fix this yet.

URL:
https://www.glowscript.org/#/user/ciherrera/folder/MyPrograms/program/milestone